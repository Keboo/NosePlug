name: .NET Core

on:
  push:
    branches: [ main ]
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    paths-ignore:
    - 'README.md'
    - 'Images/*'
    - 'docs/*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  

defaults:
  run:
    shell: pwsh

env:
  configuration: Release
  baseVersion: 0.0.1
  preRelease: true

jobs:
  build-mac:
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Set Version
      run: |
        if ("${{ github.ref }}".startsWith("refs/tags/v")) {
          $tagVersion = "${{ github.ref }}".substring(11)
          echo "buildVersion=$tagVersion.${{ github.run_number }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "nugetVersion=$tagVersion" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "preRelease=false" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        } else {
          echo "buildVersion=${{ env.baseVersion }}.${{ github.run_number }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "nugetVersion=${{ env.baseVersion }}-ci${{ github.run_number }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        }
    
    - name: Build and Test
      uses: ./.github/actions/build-and-test
      timeout-minutes: 5
      with:
        suffix: mac
        configuration: ${{ env.configuration }}
        build_version: ${{ env.buildVersion }}
        nuget_token: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Set Version
      run: |
        if ("${{ github.ref }}".startsWith("refs/tags/v")) {
          $tagVersion = "${{ github.ref }}".substring(11)
          echo "buildVersion=$tagVersion.${{ github.run_number }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "nugetVersion=$tagVersion" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "preRelease=false" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        } else {
          echo "buildVersion=${{ env.baseVersion }}.${{ github.run_number }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "nugetVersion=${{ env.baseVersion }}-ci${{ github.run_number }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        }
    
    - name: Build and Test
      uses: ./.github/actions/build-and-test
      timeout-minutes: 5
      with:
        suffix: ubuntu
        configuration: ${{ env.configuration }}
        build_version: ${{ env.buildVersion }}
        nuget_token: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    runs-on: windows-2022

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Set Version
      run: |
        if ("${{ github.ref }}".startsWith("refs/tags/v")) {
          $tagVersion = "${{ github.ref }}".substring(11)
          echo "buildVersion=$tagVersion.${{ github.run_number }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "nugetVersion=$tagVersion" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "preRelease=false" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        } else {
          echo "buildVersion=${{ env.baseVersion }}.${{ github.run_number }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "nugetVersion=${{ env.baseVersion }}-ci${{ github.run_number }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        }
    
    - name: Build and Test
      uses: ./.github/actions/build-and-test
      timeout-minutes: 10
      with:
        suffix: windows
        configuration: ${{ env.configuration }}
        build_version: ${{ env.buildVersion }}
        nuget_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Pack
      if: ${{ github.event_name != 'pull_request' }}
      run: dotnet pack -p:PackageVersion=${{ env.nugetVersion }} --configuration ${{ env.configuration }} --no-build --output ${{ github.workspace }}

    - name: Upload Artifacts
      if: ${{ github.event_name != 'pull_request' }}
      uses: actions/upload-artifact@v2
      with:
        name: NuGet
        path: ${{ github.workspace }}\*.nupkg

    - name: Push NuGet
      if: ${{ github.event_name != 'pull_request' }}
      run: dotnet nuget push ${{ github.workspace }}\*.nupkg --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate